# app/utils/telegram_handler.py

import logging
import asyncio
import time
from aiogram import Bot

MAX_MESSAGE_LENGTH = 4000      # –û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ Telegram
THROTTLE_INTERVAL = 1.0        # –í —Å–µ–∫—É–Ω–¥—É –º–∞–∫—Å–∏–º—É–º 1 –ª–æ–≥ –≤ Telegram


class TelegramLogHandler(logging.Handler):
    def __init__(self, bot: Bot, chat_id: int, level=logging.INFO):
        super().__init__(level)
        self.bot = bot
        self.chat_id = chat_id
        self.last_sent_time = 0

    def emit(self, record):
        now = time.time()

        # –ó–∞—â–∏—Ç–∞ –æ—Ç —Å–ø–∞–º–∞ (–Ω–µ —á–∞—â–µ –æ–¥–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ —Å–µ–∫—É–Ω–¥—É)
        if now - self.last_sent_time < THROTTLE_INTERVAL:
            return

        self.last_sent_time = now
        log_entry = self.format(record)

        # –û–±—Ä–µ–∑–∫–∞ —Å–ª–∏—à–∫–æ–º –¥–ª–∏–Ω–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
        if len(log_entry) > MAX_MESSAGE_LENGTH:
            log_entry = log_entry[:MAX_MESSAGE_LENGTH] + "\n...üîö –æ–±—Ä–µ–∑–∞–Ω–æ"

        asyncio.create_task(self._send(log_entry))

    async def _send(self, message: str):
        try:
            await self.bot.send_message(
                self.chat_id,
                f"{message}",
                parse_mode="HTML"
            )
        except Exception as e:
            print("‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –ª–æ–≥–∞ –≤ Telegram:", e)
