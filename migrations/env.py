from logging.config import fileConfig
from sqlalchemy import engine_from_config, pool
from alembic import context

import sys
import os

from app.database.base.base_model import Base

# üìÅ –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ app, –µ—Å–ª–∏ –∑–∞–ø—É—Å–∫ –∏–∑ –∫–æ—Ä–Ω—è
sys.path.append(os.path.abspath(os.path.join(os.path.dirname(__file__), '..')))

# ‚¨á –ò–º–ø–æ—Ä—Ç –Ω–∞—Å—Ç—Ä–æ–µ–∫ –∏ –º–æ–¥–µ–ª–µ–π
from app.main_bot.config.config import settings
from app.database import models  # üî• –û–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–π –∏–º–ø–æ—Ä—Ç –≤—Å–µ—Ö –º–æ–¥–µ–ª–µ–π

# Alembic Config
config = context.config

# –ü–æ–¥–∫–ª—é—á–∞–µ–º –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ (–µ—Å–ª–∏ —É–∫–∞–∑–∞–Ω–æ –≤ alembic.ini)
if config.config_file_name is not None:
    fileConfig(config.config_file_name)

# –ü–æ–¥—Å—Ç–∞–≤–ª—è–µ–º URL –±–∞–∑—ã –∏–∑ settings
config.set_main_option("sqlalchemy.url", settings.alembic_database_url)

# –£–∫–∞–∑—ã–≤–∞–µ–º metadata ‚Äî –Ω—É–∂–Ω–æ –¥–ª—è autogenerate
target_metadata = Base.metadata


def run_migrations_offline() -> None:
    """–ú–∏–≥—Ä–∞—Ü–∏–∏ –≤ offline-—Ä–µ–∂–∏–º–µ (–±–µ–∑ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –±–∞–∑–µ, —Ç–æ–ª—å–∫–æ SQL-—Å–∫—Ä–∏–ø—Ç)"""
    url = config.get_main_option("sqlalchemy.url")
    context.configure(
        url=url,
        target_metadata=target_metadata,
        literal_binds=True,
        dialect_opts={"paramstyle": "named"},
    )

    with context.begin_transaction():
        context.run_migrations()


def run_migrations_online() -> None:
    """–ú–∏–≥—Ä–∞—Ü–∏–∏ –≤ online-—Ä–µ–∂–∏–º–µ (–ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏–π)"""
    connectable = engine_from_config(
        config.get_section(config.config_ini_section),
        prefix="sqlalchemy.",
        poolclass=pool.NullPool,
    )

    with connectable.connect() as connection:
        context.configure(connection=connection, target_metadata=target_metadata)

        with context.begin_transaction():
            context.run_migrations()


if context.is_offline_mode():
    run_migrations_offline()
else:
    run_migrations_online()
