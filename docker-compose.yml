version: '3.8'

name: salute

services:
  main:
    build: .
    image: salute_main
    depends_on:
      manager:
        condition: service_healthy
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      - DATABASE_URL=postgresql+asyncpg://postgres:${POSTGRES_PASSWORD}@postgres:5432/salute
      - ALEMBIC_DATABASE_URL=postgresql+psycopg2://postgres:${POSTGRES_PASSWORD}@postgres:5432/salute
      - BOT_TOKEN=${BOT_TOKEN}
      - ADMIN_CHAT_ID=${ADMIN_CHAT_ID}
      - SUPPORT_USERNAME=${SUPPORT_USERNAME}
      - REDIS_URL=redis://redis:6379
    volumes:
      - ./logs:/app/logs
    command: python main.py
    restart: unless-stopped

  manager:
    build: .
    image: salute_manager
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      - DATABASE_URL=postgresql+asyncpg://postgres:${POSTGRES_PASSWORD}@postgres:5432/salute
      - ALEMBIC_DATABASE_URL=postgresql+psycopg2://postgres:${POSTGRES_PASSWORD}@postgres:5432/salute
      - BOT_TOKEN=${BOT_TOKEN}
      - ADMIN_CHAT_ID=${ADMIN_CHAT_ID}
      - SUPPORT_USERNAME=${SUPPORT_USERNAME}
      - REDIS_URL=redis://redis:6379
      - COMPOSE_PROJECT_NAME=salute
    volumes:
      - ./logs:/app/logs
      - /var/run/docker.sock:/var/run/docker.sock
    command: python managers/manager.py
    restart: unless-stopped
    healthcheck:
      test: [ "CMD", "python", "-c", "import redis; r = redis.Redis(host='redis', port=6379); r.ping()" ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  migrations:
    build: .
    image: salute_migrations
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      - DATABASE_URL=postgresql+asyncpg://postgres:${POSTGRES_PASSWORD}@postgres:5432/salute
      - ALEMBIC_DATABASE_URL=postgresql+psycopg2://postgres:${POSTGRES_PASSWORD}@postgres:5432/salute
    volumes:
      - .:/app
    entrypoint: [ "alembic" ]
    command: upgrade head
    profiles:
      - tools

  postgres:
    image: postgres:15
    environment:
      - POSTGRES_USER=${POSTGRES_USER:-postgres}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-123456}
      - POSTGRES_DB=${POSTGRES_DB:-salute}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 5s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  redis:
    image: redis:7
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 5s
      timeout: 5s
      retries: 5
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:
